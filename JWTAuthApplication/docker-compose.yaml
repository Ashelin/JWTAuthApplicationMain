version: "3.8"

services:
  postgres:
    container_name: auth-postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_secret
    ports:
      - "5432:5432"
    networks:
      - backend-network
    restart: always

  pgadmin:
    container_name: auth-pgadmin
    image: 'dpage/pgadmin4'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: secret
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - backend-network

  jwt-auth-application:
    container_name: jwt-auth-app
    image: jwt-auth-application:latest
    build: .
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - backend-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_secret
      SPRING_LIQUIBASE_CHANGELOG: classpath:/db/changelog/changelog-master.xml

  angular-builder:
    container_name: angular-builder
    build:
      context: ../JWTAuthApplication-ui
      dockerfile: Dockerfile
    volumes:
      - angular_dist:/app/dist/jwtauth-application-ui/browser
    networks:
      - backend-network
    depends_on:
      - jwt-auth-application

  angular-nginx:
    container_name: angular-nginx
    image: nginx:alpine
    volumes:
      - angular_dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - angular-builder
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  angular_dist: